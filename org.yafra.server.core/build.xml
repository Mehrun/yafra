<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!--
Licensed to the Apache Software Foundation (ASF) under one
or more contributor license agreements.  See the NOTICE file
distributed with this work for additional information
regarding copyright ownership.  The ASF licenses this file
to you under the Apache License, Version 2.0 (the
"License"); you may not use this file except in compliance
with the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing,
software distributed under the License is distributed on an
"AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, either express or implied.  See the License for the
specific language governing permissions and limitations
under the License.
-->

<!-- ant script for:  org.yafra server core based on cayenne orm -->
<!-- project name:    org.yafra.server.core -->
<!-- author:          yafra info@yafra.org -->
<!-- source control:  cvs -->
<!-- @author Last checkin by $Author: mwn $ on $Date: 2009-12-20 20:22:58 $ -->
<!-- Current revision $Revision: 1.7 $, tag $Name:  $ -->

<project name="org.yafra.server.core" basedir="." default="all">

	<!-- workdir on unix /work  windows C:/work   /> -->
    <condition property="drive" value="C:/" else="/">
        <os family="windows" />
    </condition>
	 
	<property environment="env"/>
	<property name="projname" value="org.yafra.server.core" />

	<!-- toplevel settings - please update -->
	<property name="yafraver" value="${env.YAFRAVER}" />
	<property name="yafrarel" value="${env.YAFRAREL}" />
	<property name="workdir" value="${drive}work" />
	<property name="wsdir" value="${env.JAVANODE}" />

	<!-- toplevel directories -->
	<property name="servercore.dir" value="${wsdir}/${projname}" />
	<property name="server.src" value="${servercore.dir}/src" />

	<property name="build.dir" value="${env.WORKNODE}/java/${projname}" />
	<property name="deploy.dir" value="${workdir}/classes" />
	<property name="docs.dir" value="${workdir}/javadoc" />
	<property name="cp.dir" value="${workdir}/classes" />

	<!-- set your correct cayenne modeler node here - copy a driver setup from a template like derbynetNode or mysqlNode -->
	<property name="dbdriver" value="${server.src}/org.yafra.dbNode.driver.xml" />	
	
	<!-- project deliverables -->
	<property name="serverjar" value="${deploy.dir}/${projname}.jar" />
	<property name="clientjar" value="${deploy.dir}/org.yafra.server.coreclient.jar" />

	<path id="org.yafra.server.core.classpath">
        <pathelement path="${cp.dir}/org.yafra.utils.jar"/>
        <pathelement path="${cp.dir}/cayenne-server-3.0.2.jar"/>
        <pathelement path="${build.dir}/server"/>
    </path>

	<!-- javac flags -->
	<property name="compile.debug" value="true" />
	<property name="compile.deprecation" value="true" />
	<property name="compile.optimize" value="true" />
    <property name="debuglevel" value="source,lines,vars"/>
    <property name="target" value="1.7"/>
    <property name="source" value="1.7"/>

	<!-- ALL target sections -->
	<target name="all" description="make org.yafra server jars based on cayenne"
		depends="init, server, corestub">
        	<echo message="============================================="/>
        	<echo message="server.core Version ${yafraver} ${yafrarel}"/>
        	<echo message="============================================="/>
	</target>

	<!-- INIT CLEAN target sections -->
	<target name="init" description="init" depends="clean">
        <echo message="yafra core server build.xml - init"/>
		<buildnumber />
		<tstamp />
		<mkdir dir="${build.dir}" />
		<mkdir dir="${build.dir}/server" />
		<mkdir dir="${build.dir}/corestubs/org/yafra/model" />
		<mkdir dir="${build.dir}/corestubs/org/yafra/interfaces" />
	</target>
	<target name="clean" description="delete all temp files">
        <echo message="yafra core server build.xml - clean"/>
		<delete file="${serverjar}" />
		<delete file="${clientjar}" />
		<delete dir="${build.dir}" includeEmptyDirs="true" />
	</target>

	<!-- COMPILE target sections -->
	<target name="server" description="create server jar">
        <echo message="yafra core server build.xml - do server jar"/>
		<javac srcdir="${server.src}" destdir="${build.dir}/server" debug="${compile.debug}" deprecation="${compile.deprecation}" optimize="${compile.optimize}">
			<compilerarg value="-Xlint" />
			<classpath refid="org.yafra.server.core.classpath"/>
		</javac>
		<copy file="${server.src}/cayenne.xml" todir="${build.dir}/server" />
		<copy file="${server.src}/org.yafra.yafraMap.map.xml" todir="${build.dir}/server" />
		<copy file="${dbdriver}" todir="${build.dir}/server" />
		<jar jarfile="${serverjar}" basedir="${build.dir}/server">
			<manifest>
				<attribute name="Author" value="${user.name}" />
				<section name="org.yafra.server jar - cayenne server">
					<attribute name="Title" value="org.yafra.server.core" />
					<attribute name="Vendor" value="yafra.org" />
					<attribute name="Build" value="${build.number}" />
					<attribute name="Date" value="${TODAY}" />
					<attribute name="Version" value="${yafraver}${yafrarel}" />
				</section>
				<section name="Copyright">
					<attribute name="Copy" value="(C) yafra.org 2010" />
				</section>
			</manifest>
		</jar>
	</target>

	<!-- COMPILE target sections - copy java source for client stub so it can be used by GWT as well -->
	<target name="corestub" description="create core stubs client jar" depends="server">
        <echo message="yafra core server build.xml - do core client jar"/>
		<copy file="${server.src}/model.gwt.xml" todir="${build.dir}/corestubs/org/yafra" />
		<copy file="${server.src}/interfaces.gwt.xml" todir="${build.dir}/corestubs/org/yafra" />
		<copy todir="${build.dir}/corestubs/org/yafra/interfaces">
		    <fileset dir="${build.dir}/server/org/yafra/interfaces"/>
		</copy>
		<copy todir="${build.dir}/corestubs/org/yafra/interfaces">
		    <fileset dir="${server.src}/org/yafra/interfaces"/>
		</copy>
		<copy todir="${build.dir}/corestubs/org/yafra/model">
		    <fileset dir="${build.dir}/server/org/yafra/model"/>
		</copy>
		<copy todir="${build.dir}/corestubs/org/yafra/model">
		    <fileset dir="${server.src}/org/yafra/model"/>
		</copy>
		<jar jarfile="${clientjar}" basedir="${build.dir}/corestubs">
			<manifest>
				<attribute name="Author" value="${user.name}" />
				<section name="org.yafra.server.core client stubs jar">
					<attribute name="Title" value="org.yafra.server.coreclient" />
					<attribute name="Vendor" value="yafra.org" />
					<attribute name="Build" value="${build.number}" />
					<attribute name="Date" value="${TODAY}" />
					<attribute name="Version" value="${yafraver}${yafrarel}" />
				</section>
				<section name="Copyright">
					<attribute name="Copy" value="(C) yafra.org 2010" />
				</section>
			</manifest>
		</jar>
	</target>

</project>
